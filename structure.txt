struct {
	enum {
		change_cipher_spec(20), alert(21), handshake(22),
		application_data(23), (255)
	} ContentType;
	struct {
		uint8 major;
		uint8 minor;
	} ProtocolVersion;
	uint16 length;
	struct {
		enum {
			hello_request(0), client_hello(1), server_hello(2),
			certificate(11), server_key_exchange (12),
			certificate_request(13), server_hello_done(14),
			certificate_verify(15), client_key_exchange(16),
			finished(20)
			(255)
		} HandshakeType;
		uint24 length;
		struct {
			struct {
				uint8 major;
				uint8 minor;
			} ProtocolVersion;
			struct {
				uint32 gmt_unix_time;
				opaque random_bytes[28];
			} Random;
			opaque SessionID<0..32>;
			CipherSuite cipher_suites<2..2^16-2>;
			CompressionMethod compression_methods<1..2^8-1>;
			select (extensions_present) {
				case false:
					struct {};
				case true:
					Extension extensions<0..2^16-1>;
			};
		} ClientHello;
	} Handshake;
} TLSPlaintext;

0: content type
1-2: protocol version
3-4: length of bytes in front
5: handshake type
6-8: handshake length (in front)
9-10: handshake version
11-14: random time
15-43: random bytes
44: session ID length -> x
variable: session ID
45+x to 46+x: cipher suites length -> y
variable: cipher suites
